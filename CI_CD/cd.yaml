pr:
  - master
  - releases/*

pool:
  vmImage: 'ubuntu-latest'

steps:
  - script: |
      docker run --rm -d --name="postgresql_sevice" -e POSTGRES_DB="tagger-userdb" -e POSTGRES_USER="postgresIdp" -e POSTGRES_PASSWORD="postgres1" -e PGDATA="/var/lib/postgresql/data/pgdata" postgres:9.6
    displayName: "Start PSQL Server"
  
  - script: |
      docker run --rm -t -e SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql_sevice:5432/tagger-userdb -e SPRING_DATASOURCE_USERNAME=postgresIdp -e SPRING_DATASOURCE_PASSWORD=postgres1 -v $(Build.Repository.LocalPath):/app --link postgresql_sevice:postgresql_sevice --workdir /app maven mvn -f pom.xml clean package
    displayName: "Build and Test Java"

  - script: |
      docker stop postgresql_sevice
    displayName: "Stop PSQL Server"

  - script: |
      docker login -u $(user) -p $(password)
    displayName: "Docker Login"
  
  - script: |
      cd $(Build.Repository.LocalPath)/gateway
      docker build -t $(user)/coco_gateway .
      docker push $(user)/coco_gateway
    displayName: "Build and Push Docker Gateway"
  
  - script: |
      cd $(Build.Repository.LocalPath)/tagging-service
      docker build -t $(user)/coco_tagging .
      docker push $(user)/coco_tagging
    displayName: "Build and Push Docker Tagging"
  
  - script: |
      cd $(Build.Repository.LocalPath)/query-service
      docker build -t $(user)/coco_query .
      docker push $(user)/coco_query
    displayName: "Build and Push Docker Query"
  
  - script: |
      cd $(Build.Repository.LocalPath)/user-service
      docker build -t $(user)/coco_user .
      docker push $(user)/coco_user
    displayName: "Build and Push Docker User"

  - script: |
      cd $(Build.Repository.LocalPath)/client
      docker build -t $(user)/coco_client .
      docker push $(user)/coco_client
    displayName: "Build and Push Docker Client"

